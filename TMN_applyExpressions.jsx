// written by fabiantheblind// http://www.the-moron.net// with a hint by Dan E.// http://forums.adobe.com/message/3310628#3310628applyExpression ();function applyExpression(){	// begin an Undo group	app.beginUndoGroup("apply Expression");			// check if a comp is active//	$.writeln("Hello World!");	    var curComp = app.project.activeItem;    if (!curComp || !(curComp instanceof CompItem))    {        alert("Please select a Composition.");        return;    }	// get the selection	var theSelection = curComp.selectedLayers;		// you could use this for a null within the workarea	//var theController = curComp.addNull(curComp.workAreaDuration);		// add a null object to the comp for the slider controls	var theController = curComp.layers.addNull();	// make a unique name for the null	theController.source.name =  prompt("Enter an unique name for the controller Null Object", curComp.name.toString() + "_control");;	var theAddExprStringRAW = "comp(\"IGOR\").layer(\"headControl\").effect(\"XXXXX\")(\"Schieberegler\")";	var additionalExpression = prompt("Add additional Expr to sliders?",theAddExprStringRAW);	    for (var layerId = 0; layerId < theSelection.length; layerId++)     {		        var layer = theSelection[layerId];		// get the number of layers within the layer		// -1 because		// layers start at index 1 frames start at 0 Frames		// Thnx Dan.		var theNumber = parseInt(layer.source.numLayers -1);        // add a slider control to the null obj. 		var theSliderEffect = theController("ADBE Effect Parade").addProperty("ADBE Slider Control"); 				// change the name of the slider to something usefull		theSliderEffect.name = layer.source.name;		var theAddExprString = additionalExpression.replace("XXXXX",layer.name);		var theSliderProperty = theSliderEffect.property("ADBE Slider Control-0001");		app.beginSuppressDialogs();						if (!theSliderProperty.canSetExpression) { continue }		try{		theSliderProperty.expression = theAddExprString;		}catch(e){						theSliderProperty.expression = "";			$.writeln(e);			}		app.endSuppressDialogs(false);		// this is for the timeremapping to make em all hold keyframes		var holdInt = KeyframeInterpolationType.HOLD;		// get the timeremapping property and enable it		var property = layer.property("ADBE Time Remapping");			  layer.timeRemapEnabled = true;			// set all keyframes to hold      for (var i = 1; i <= property.numKeys; i++){        property.setInterpolationTypeAtKey(i, holdInt, holdInt);        }		// remove the last keyframe. dont need it		property.removeKey(property.numKeys);		// check if the prperty can take expressions		// dont need it. but i need more checking :)		if (!property.canSetExpression) { continue }		// apply the expression with		//the name of the slider		// the name of the control null		// and the number of layers within the comps		property.expression = exprString(theSliderEffect.name, theController.name, theNumber);	}	app.endUndoGroup();    }// this function builds the expression stringfunction exprString(inEffName, inControllerName,inNum){		// the name of the effect 	var theEffName =  inEffName;	// the name of the control null obj	var theCntrlName = inControllerName;	// the number of layers within the timeremapped comps	var theNumber = inNum;				// the expr will be something like this watch out german expression (replace "Schieberegler" with "Slider Control"):	// this expression remaps the frame number within the comp to values from the slider	// val = Math.floor(thisComp.layer("control").effect("MovementControl")("Schieberegler"))*thisComp.frameDuration;	//if (Math.floor(thisComp.layer("control").effect("MovementControl")("Schieberegler")) < 0){val =0;	//}if (Math.floor(thisComp.layer("control").effect("MovementControl")("Schieberegler")) > 3){val =3* thisComp.frameDuration;	//}			// build the string with the variables from the selection	var theString = "val = Math.floor(thisComp.layer(\"" + theCntrlName + "\").effect(\"" + theEffName +"\")(\"Schieberegler\"))*thisComp.frameDuration;\n"+	" if (Math.floor(thisComp.layer(\"" + theCntrlName + "\").effect(\""+ theEffName +"\")(\"Schieberegler\")) < 0){val =0;\n"+	" }if (Math.floor(thisComp.layer(\"" + theCntrlName + "\").effect(\""+ theEffName +"\")(\"Schieberegler\")) > "+theNumber+"){val ="+theNumber+"* thisComp.frameDuration;\n }" ;		// and return the string	return theString;}// taken from Ease and wizz.jsx// http://aescripts.com/ease-and-wizz/function getPathToFolder(){ 		var EXPR_FOLDER        = 'exprFolder';	var folderObj = new Folder((new File($.fileName)).path + "/" + EXPR_FOLDER);	return folderObj;}function readFile(){ 	var easing_folder = getPathToFolder();	var file_handle   = new File(easing_folder.fsName + '/' + "expression.txt");	if (!file_handle.exists) {		throw("I can't find the file");		return;	}	try 	{		file_handle.open('r');		var the_code = file_handle.read();	}	catch(e) 	{		throw("I couldn't read the easing equation file: " + e);		return;	}	finally	{		file_handle.close();	}	return(the_code);} 