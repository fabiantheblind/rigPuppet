//TMN_rigPuppet.jsxrigPuppet();function rigPuppet(){app.beginUndoGroup("Rig Puppet");var curComp = app.project.activeItem;	if (!curComp || !(curComp instanceof CompItem))	{		alert("Please select a Composition.");		return;	}	var thePuppet = curComp.selectedLayers[0];	var thePuppetsName = thePuppet.source.name;	try{		var effect = thePuppet.Effects.addProperty("tmnpuppet");		var theEffNameAdd = "_RIG";		effect.name = thePuppetsName + theEffNameAdd;	}catch (e){		$.writeln(e);		return; }	// the coustum effect is applyed. now we need to rig the effects	// so we have to get the controllers within the comp	// first layer is head control second bodycontrol	//alert(thePuppet.source.layer(1).source.name );	//alert(thePuppet.source.layer(1).effect(1).name );	// the head timeremap uplink	var basicUplinkString = "comp(\"" + curComp.name + "\").layer(\"" + thePuppetsName + "\").effect(\"" + thePuppetsName;	var value_with_basicUplinkString ="value + " + basicUplinkString;	var eyeLidExpr = basicUplinkString + theEffNameAdd + "\")(\"eyes lids\")";	var eyesExpr = basicUplinkString + theEffNameAdd + "\")(\"eyes\")";	var mouthExpr = basicUplinkString + theEffNameAdd + "\")(\"mouth\")";	var headsExpr = basicUplinkString + theEffNameAdd + "\")(\"head\")";		thePuppet.source.layer(1).effect("eye_lids").property("ADBE Slider Control-0001").expression = eyeLidExpr;	thePuppet.source.layer(1).effect("mouth").property("ADBE Slider Control-0001").expression = mouthExpr;	thePuppet.source.layer(1).effect("eyes").property("ADBE Slider Control-0001").expression = eyesExpr;	thePuppet.source.layer(2).effect("heads").property("ADBE Slider Control-0001").expression = headsExpr;		// the head position and rotation uplink	var headPosExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"position head\")";	var headRotExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"rotate head\")";	thePuppet.source.layer("heads").position.expression = headPosExpr;	thePuppet.source.layer("heads").rotation.expression = headRotExpr;		//the body timeremap uplink	var armL_Expr = basicUplinkString + theEffNameAdd + "\")(\"arm left\")";	var armR_Expr = basicUplinkString + theEffNameAdd + "\")(\"arm right\")";	var bodyExpr = basicUplinkString + theEffNameAdd + "\")(\"body\")";	var legL_Expr = basicUplinkString + theEffNameAdd + "\")(\"leg left\")";	var legR_Expr = basicUplinkString + theEffNameAdd + "\")(\"leg right\")";		thePuppet.source.layer(2).effect("arm_left").property("ADBE Slider Control-0001").expression = armL_Expr;	thePuppet.source.layer(2).effect("arm_right").property("ADBE Slider Control-0001").expression = armR_Expr;	thePuppet.source.layer(2).effect("leg_left").property("ADBE Slider Control-0001").expression = legL_Expr;	thePuppet.source.layer(2).effect("leg_right").property("ADBE Slider Control-0001").expression = legR_Expr;	thePuppet.source.layer(2).effect("body").property("ADBE Slider Control-0001").expression = bodyExpr;			// the body and legs and arms position and rotation		// the body	var bodyPosExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"body position\")";	var bodyRotExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"body rotate\")";	thePuppet.source.layer("body").position.expression = bodyPosExpr;	thePuppet.source.layer("body").rotation.expression = bodyRotExpr;		// leg left	var legL_PosExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"position leg left\")";	var legL_RotExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"rotate leg left\")";		//---------- here comes the mate controller		thePuppet.source.layer("leg_left").position.expression = legL_PosExpr;	thePuppet.source.layer("leg_left").rotation.expression = legL_RotExpr;			// leg right	var legR_PosExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"position leg right\")";	var legR_RotExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"rotate leg right\")";	thePuppet.source.layer("leg_right").position.expression = legR_PosExpr;	thePuppet.source.layer("leg_right").rotation.expression = legR_RotExpr;			// arm front	var armL_PosExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"position arm left\")";	var armL_RotExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"rotate arm left\")";	thePuppet.source.layer("arm_left").position.expression = armL_PosExpr;	thePuppet.source.layer("arm_left").rotation.expression = armL_RotExpr;	// arm behind	var armR_PosExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"position arm right\")";	var armR_RotExpr = value_with_basicUplinkString + theEffNameAdd + "\")(\"rotate arm right\")";	thePuppet.source.layer("arm_right").position.expression = armR_PosExpr;	thePuppet.source.layer("arm_right").rotation.expression = armR_RotExpr;		// now the track matte uplink to the checkboxes	var armR_TM_Expr = basicUplinkString + theEffNameAdd + "\")(\"arm right behind\")";	var armL_TM_Expr = basicUplinkString + theEffNameAdd + "\")(\"arm left behind\")";	var legR_TM_Expr = basicUplinkString + theEffNameAdd + "\")(\"leg right behind\")";	var legL_TM_Expr = basicUplinkString + theEffNameAdd + "\")(\"leg left behind\")";		var theEffExt = "body_Alpha_";	var theTMNull = thePuppet.source.layer(3);	theTMNull.effect( theEffExt + "arm_right").property("ADBE Checkbox Control-0001").expression = armR_TM_Expr;	theTMNull.effect( theEffExt + "arm_left").property("ADBE Checkbox Control-0001").expression = armL_TM_Expr;	theTMNull.effect( theEffExt + "leg_right").property("ADBE Checkbox Control-0001").expression = legR_TM_Expr;	theTMNull.effect( theEffExt + "leg_left").property("ADBE Checkbox Control-0001").expression = legL_TM_Expr;					// this is from an older version. but still good to have	// apply the mirrir expression	// var theScaleValue = thePuppet.scale.valueAtTime(0,true);	// effect("slider").setValue(theScaleValue[0]);	// 	// var scaleExpr = "var posNeg;\n" + 	// "if(effect(\"" + thePuppetsName + theEffNameAdd + "\")(\"mirrorpuppet\")==true)\n" + 	// "{posNeg = 1;\n" + 	// "}else{\n" + 	// "posNeg = -1;\n" + 	// "}\n" + 	// "var w = effect(\"" + thePuppetsName + theEffNameAdd + "\")(\"slider\")* posNeg;\n" + 	// "var h = effect(\"" + thePuppetsName + theEffNameAdd + "\")(\"slider\");\n" + 	// "[w,h]";	// thePuppet.scale.expression = scaleExpr;	app.endUndoGroup();	}